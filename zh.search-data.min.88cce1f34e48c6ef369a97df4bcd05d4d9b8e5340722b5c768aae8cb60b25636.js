'use strict';(function(){const b={encode:!1,tokenize:function(a){return a.replace(/[\x00-\x7F]/g,'').split('')}};b.doc={id:'id',field:['title','content'],store:['title','href','section']};const a=FlexSearch.create('balance',b);window.bookSearchIndex=a,a.add({id:0,href:'/posts/',title:"背景辐射",section:"",content:"menu\n"}),a.add({id:1,href:'/posts/change-iis-to-rclone-of-webdav/',title:"提升安全性：将提供 webdav 服务的 IIS 替换为 rclone",section:"背景辐射",content:"前情提要 #   （提升安全性：Nginx 反向代理 RDP 和 IIS 服务）\n在之前的文章里，webdav 服务由系统自带的 IIS 来提供，由于该服务依赖于系统账号以及众所周知 Windows 自带服务安全性问题的原因，所以时隔这么久以后，我决定把 IIS 替换为 rclone 来进一步降低安全风险。\n 方案选择 #  在 Windows 上提供 webdav 服务的除了有我之前使用的 IIS 以外还有 Nginx，Apache，rclone 等等。IIS 因为与系统的耦合度有些高且之前 Samba 爆出过大漏洞所以弃用；Nginx 在 2019 年的帖子有提到缺少PROPFIND方法导致有些客户端无法创建文件，不过之后有没有修复我没有查，如果之后只有一个服务端的话可以考虑使用整合的 Nginx；Apache不熟。最后选择 rclone 是因为我先前已经部署了将硬盘内容加密冷备份到 OneDrive 的任务，无需重新了解 rclone。\n 之前的 rclone 冷备份配置文件\n 原有配置项 #  按照原有配置项进行配置，最后只要关闭 IIS 并替换成 rclone 就行。无需修改原有 nginx 配置。\n   名称 内容     绑定 192.168.208.145:8088   目标文件夹 G:\\   基础地址 /S4f_/   用户名 share   密码 share024pass    完成后，点击这个任务的属性，在常规选项卡的安全选项中，选择不管用户是否登录都要运行并输入密码，取消勾选如果任务运行时间超过以下时间，停止任务。\nrclone 运行脚本 #  rclone 版本 v1.54.0\n1 2 3 4 5 6 7 8  @echo off chcp 65001 cd /d %~dp0 echo Start at %date%-%time%, log in webdav.log echo Start at %date%-%time% \u0026gt;webdav.log rclone serve webdav \u0026#34;G:\\\u0026#34; --baseurl \u0026#34;S4f_\u0026#34; --user share --pass share024pass --addr 192.168.208.145:8088 2\u0026gt;\u0026gt;webdav.log echo End at %date%-%time% \u0026gt;\u0026gt;webdav.log pause   设置自启动 #  打开任务计划程序，点击创建基本任务，按照下表填写任务信息：\n   选项 内容     名称 webdav   触发器 计算机启动时   操作 启动程序   程序或脚本 [运行脚本所在的位置]\\webdav.bat    关闭 IIS #  删除用户 #  进入控制面板\\用户帐户\\用户帐户，选择管理其他账户，点击原先为了 IIS 认证创建的本地账户，点击删除账户。\n移除服务 #  运行中输入services.msc，禁用并停止World Wide Web Publishing Service（发布服务）。\n进入控制面板\\程序\\程序和功能，点击启用或关闭 Windows 功能。取消Internet Information Services下所有的勾。\n结论 #  不要过早优化！！因为很多情况下早期使用的方案在没有实践的情况下往往会有许多坑要踩，如果过早地造轮子进行优化，等到后续更换到其他方案时相当于前期的很多重复作业都等于白做。另外，IIS配置太繁琐了，坑也一堆，例如，要修改配置才能达到最大4G单个文件，内部限制速度最大只有200M等等。\n"}),a.add({id:2,href:'/posts/action-tinypng-image/',title:"Github Actions 转换图片和构建博客",section:"背景辐射",content:'构想 #  本文使用 Github Action 来实现本地上传图片后自动在云端处理，弃用原来的 picgo，顺便将博客构建过程也移到云端。TinyPNG 是一个无损转换 PNG 图片的网站，通过将图片颜色索引化可以大大降低大小。网站提供转换 API 可供使用。以下是本博客使用的三个 repos 和自动化操作流程。    repo 作用     blogData 博客文章源文件   cdn 存储引用的图片和其他文件   robust-wq jsdelivr 代理的公共仓库   user.github.io 从源文件生成的博客    旧方案 #  图片文件通过 picgo 上传，博客由本地脚本搭建到 blogData 下的文件夹 ./public/ 内（该文件夹是 blogData 的子模块 user.githun.io）。每次需要构建时由脚本先生成博客文件，作为子模块同步完后再同步源文件。\n新方案 #  通过 git 命令或者网页上传原始图片，通过 Github Action 处理并替换，同步到公共用户的 repo中。博客只需要同步源文件，构建和部署都在 Github Action 中完成。\n流程图 #    重命名返回可插入文章的链接并上传图片  mermaid.initialize({ "flowchart": { "useMaxWidth":true }, "theme": "neutral" } ) graph LR a[souce rcp.sh old.PNG]--b[复制为\ncdn/img/2019..0214.png]--d[commit \u0026 push]--e[Actions/tinify.yml\npush 触发同步到 robust-wq] a--c["返回![](https://jsdelivr/xx)"]   构建博客 graph LR f[source UPDATE\n上传源文件至私有库]--g[Actions/gh.yaml\npush 触发生成博客]--i[部署至 user.github.io]   本地脚本 #  图片命名为时间戳 #  通过 git clone https://github.com/./cdn 将 cdn 文件夹放置在本地目录（因为如果是子模块的话需要额外设置，所以不建议直接放在 blogData 这个 repo 内作为子模块使用），此处放置在 ~/cdn。 添加一个名为 rcp.sh 的脚本。这个脚本按照输入的图片地址参数将图片复制到 cdn/img/ 文件夹，并按照时间改名为 20210302xx.png。\n1 2 3 4 5  \u0026gt; source rcp.sh ~/download/old.png # 先返回用于插入文章的链接，然后上传 ![](https://cdn.jsdelivr.net/gh/robust-wq/cdn/img/2021xx.png) ... DONE   rcp.sh内容：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  #!/usr/bin/sh if [ $# != 1 ] ; then echo \u0026#34;USAGE: $0[Image file path]\u0026#34; echo \u0026#34; e.g.: $0~/download/rad.png\u0026#34; exit 1; fi filename=\u0026#34;`readlink -m $1`\u0026#34; nfname=\u0026#34;`date \u0026#39;+%Y%m%d%H%M%S\u0026#39;``echo .${filename#*.}|tr [:upper:] [:lower:]`\u0026#34; cd ~/cdn echo \u0026#34;![](https://cdn.jsdelivr.net/gh/robust-wq/cdn/img/$nfname)\u0026#34; echo PULLING... git pull cp \u0026#34;$filename\u0026#34; \u0026#34;./img/$nfname\u0026#34; git add -A git commit -m \u0026#34;Add $nfname\u0026#34; echo PUSHING... git push echo DONE   Github Action #  Actions 整理 #     Repo 脚本名 包含 Action 说明     cdn tinify.yml checkout, tinify, copycat 压缩图片并替换，完成后复制到其他 repo   blogData gh.yml checkout, blog, gh-pages 生成博客并发布到 github.io     actions/checkout@v2: 获得 git 内容 namoscato/action-tinify@v1: 用 TinyPNG/JPG 压缩图片 andstor/copycat-action@v3: 将指定文件同步至 robust-wq 中 peaceiris/actions-gh-pages@v3: 发布博客  图片处理 Actions #  脚本所在 repo: ./cdn\npush 触发 Actions 脚本，压缩此次 commit 的图片并替换上传的图片，同步到 cdn 这个 repo。完成后将该 repo 下除 .github/ 以外的文件同步至 robust-wq 中。\n点击 repo 页面中的Actions选项，创建.github/workflows/tinify.yml文件，添加以下内容：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  name:tinify-copyon:push:branches:[main ]pull_request:branches:[main ]workflow_dispatch:jobs:build:runs-on:ubuntu-lateststeps:- uses:actions/checkout@v2- name:check last changed filesrun:git diff-tree --no-commit-id --name-only -r ${{ github.sha }}- uses:namoscato/action-tinify@v1with:api_key:${{ secrets.TINIFY_API_KEY }}github_token:${{ secrets.GITHUB_TOKEN }} - name:repo-syncuses:andstor/copycat-action@v3with:username:github-actions[bot]email:github-actions[bot]@users.noreply.github.comcommit_message:beep..reCHaRgeDclean:truepersonal_token:${{ secrets.DST_REPO_TOKEN }}exclude:.github/*src_path:./src_branch:maindst_path:/dst_branch:maindst_owner:robust-wqdst_repo_name:cdn  打开Settings/Secrets，点击New repository secret，添加tinify_api_key（来自 Tinify API）和repo_token（在个人设置中Personal access tokens获取），此处无需再添加后一项了，Action组件自动会读取。进入 robust-wq 账号，获取个人凭证并作为DST_REPO_TOKEN填入Secrets。注意：创建的 secret 不能以 github 开头。\n自动构建站点 #  脚本所在 repo: blogData\n在.github/workflows下创建gh.yaml，需要替换 ./github.io：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  name:github pageson:push:branches:[main, master] # Set a branch to deployjobs:deploy:runs-on:ubuntu-18.04steps:- uses:actions/checkout@v2with:submodules:true# Fetch Hugo themes (true OR recursive)fetch-depth:0# Fetch all history for .GitInfo and .Lastmod...- name:Deployuses:peaceiris/actions-gh-pages@v3with:personal_token:${{ secrets.PERSONAL_TOKEN }}external_repository:./github.iopublish_dir:./publicuser_name:\u0026#39;github-actions[bot]\u0026#39;user_email:\u0026#39;github-actions[bot]@users.noreply.github.com\u0026#39;  因为要把页面发布到其他的 repo 中，所以此处不能使用免获取的GITHUB_TOKEN。在个人设置的凭证申请页获取到凭证后，在Secrets中作为PERSONAL_TOKEN填入。\n使用方法 #  创建脚本UPDATE，写入：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  #!/usr/bin/sh pwd if ! pgrep -f ssh-agent; then echo -ne \u0026#39;\\007\u0026#39; eval $(ssh-agent -s) ssh-add ~/.ssh/id_rsa else echo ssh-agent is already running.. fi git add -A \u0026amp;\u0026amp; git commit -m \u0026#34;`date \u0026#39;+%Y-%m-%d %H:%M:%S\u0026#39;`\u0026#34; \u0026amp;\u0026amp; git push echo DONE   总的来讲，如果要在博客中插入图片，通过 source rcp.sh [本地图片地址] 获取到加速后的链接。需要生成博客，输入source UPDATE。\n其他 #  原计划是使用 Vercel（类似于 Netlify，但是用的不是 Cloudflare），后来的方案是主站使用 Level CDN 加速，字体文件（中文字体比较大）则和图片一样放到 Github 上的 Repo 里（即本文的 cdn 同步至 robust-wq/），再由 jsdelivr 加速。\n'}),a.add({id:3,href:'/posts/github-sercurity-alert-by-git/',title:"来自 Github 的漏洞提醒",section:"背景辐射",content:'背景 #  今天我在 push 文件的时候收到了来自 Github 的漏洞提醒，原因是在我使用的组件中存在漏洞。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  \u0026gt; git push Enter passphrase for key \u0026#39;/home/root/.ssh/id_rsa\u0026#39;: Enumerating objects: 5, done. Counting objects: 100% (5/5), done. Delta compression using up to 2 threads Compressing objects: 100% (3/3), done. Writing objects: 100% (3/3), 1.28 KiB | 109.00 KiB/s, done. Total 3 (delta 2), reused 0 (delta 0) remote: Resolving deltas: 100% (2/2), completed with 2 local objects. remote: remote: GitHub found 1 vulnerability on user/repo\u0026#39;s default branch (1 low). To find out more, visit: remote: https://github.com/user/repo/security/dependabot/path/requirements.txt/aiohttp/open remote: To github.user/repo.git bae83c8..8019db0 master -\u0026gt; master   处理 #  在上传完文件后， git 命令返回了一些以前没有的信息，提醒我在我使用的 Python 依赖中，当前版本的 aiohttp 包含了漏洞，并给出了详细信息的网址。 代码当前依赖的 aiohttp 组件版本为 3.5.4，这个版本下的组件存在一个通过构造 URL 将其他用户导向任意链接的漏洞，尽管这个漏洞被标记为低严重性，但是 Github 的依赖机器人（Dependabot）还是建议我将依赖升级到修复 bug 后的 3.7.4。\n1  pip3 install aiohttp==3.7.4   同时，这个机器人还在昨天给我发了一个 pull request，将依赖要求文件requirements.txt中的版本也进行了替换。\n这里有三种 merge 选项1（M 代表 Master，F 代表 Feature）：\n merge\n分支中的所有 commit 历史以及提交者信息都会被保留加入到主干的历史中，会有额外的 commit。\n mermaid.initialize({ "flowchart": { "useMaxWidth":true }, "theme": "neutral" } ) graph LR; A--B--M1--M2--Z[普通 Merge] B--F1--F2--Z  Squash merge\n分支中的 commit 历史合并为单个 commit 添加到主干中，原提交者信息替换为操作者，会有额外的 commit。\ngraph LR; A--B--M1--M2--Z[Squash and Merge]  Rebase merge\n分支中的所有 commit 历史都会被保留加入到主干的历史中，但不会添加额外的 commit。\ngraph LR; A--B--M1--M2--F1--F2--Z[Rebase and Merge]   三种选项都可以，区别只是体现在了commit历史中，所以我选择了Squash merge。完成合并后，在本地库中再git pull一下拉回来更改（也可以git fetch和git merge组合，前者获取远程库更改，后者将更改合并到本地库中，git pull比较粗暴适合本地已完成所有更新提交后使用）。\n1 2 3 4  git fetch origin master#只取回远程更新的信息，但并没有改变本地的代码,工作空间和缓存区都没改变，就相当于专门开辟了一片空间来保存远程仓库更新的信息。远程更新的信息指针为FETCH_HEAD git diff FETCH_HEAD#展示本地当前状态和远程仓库最新提交的区别 git show FETCH_HEAD#展示远程仓库最新提交和远程仓库上次提交的区别 git merge FETCH_HEAD#将本地和远程最新提交merge   参考 #    https://stackoverflow.com/questions/2427238/in-git-what-is-the-difference-between-merge-squash-and-rebase \u0026#x21a9;\u0026#xfe0e;\n   '}),a.add({id:4,href:'/posts/crack-zip-password-with-header/',title:"利用 Zipcrypto 文件头漏洞破解 ZIP 压缩包",section:"背景辐射",content:" 本文介绍了如何利用 ZIP 压缩中旧的加密算法 zipcrypto 的文件头漏洞来破解压缩包。1\n 破解要求：\n   条件 重要性 备注 \u0026amp; 导致无法破解的情况     ZIP 压缩包且采用 Zipcrypto 算法加密 必需 如果算法采用的另外一种 AES-256，则不存在该漏洞，无法破解。早期（2015年前后）的压缩软件默认情况下用的是旧的加密算法。   目标文件的压缩方法是 Store 仅存储 只知道文件头情况下必需 如果用的是 Deflate 压缩，要破解整个压缩包，则需要拥有压缩包内同样的一个文件，将该文件也用 Deflate 压缩后才能用 pkcrack 破解。   压缩包内的某一个文件的文件头存在固定格式 至少12字节 已知的字节至少有8个是连续的，剩余字节可以不连续，如果总计小于12个字节则无法破解。    例如，ZIP 压缩包内套 ZIP 压缩包，内部的这个压缩包头部是可以猜测得到；XML/PNG 等等文件有固定头部。不过一般情况下除非文件比较小，压缩的时候因为压缩率不高而仅存储，大部分时候同时满足固定文件头和Store两个条件的文件一般都是压缩包或者比较小的图片文件。\n破解 #  如果要破解的压缩包符合上表的条件，则可以破解。要破解的压缩包包括如下文件：\n1 2 3 4  1.zip: 文件名 属性 加密 算法 flag.zip A + Zipcrypto Store other.txt A + Zipcrypto Deflate   下载工具 #  kimci86/bkcrack\n猜测文件头 #   参考\n ZIP 压缩包文件头存在固定内容，其余还有几位我们可以猜测出来。    偏移 内容 其他可能 作用     0 504B 0304  ZIP 固定文件头   - 1400 0A00 pkware 最低版本   - 0000 0100 通用比特标志   - 0800 0000 08代表 Deflate 压缩   27 00  文件名长度的后一字节   28 0000  扩展区长度    根据上表，偏移0～9共10个字节是连续的符合最低8连续字节要求，再加上27～29共3个字节合计13个字节符合最低12字节的要求，因此只要猜测出其中不确定的位，最多试 2^3=8 次即可完成破解。\n在我的实验里，以下两种文件头的可能性比较大：\n1 2 3  0 2 4 6 8 9 : 504B 0304 1400 0000 0800 # flag压缩包内的文件是 Deflate 压缩的 : 504B 0304 0A00 0000 0000   使用工具 #  以 Win10 平台为例，下载完成后解压缩进入工具目录。使用 WinHex 或者 Sublime 等等软件将0～9这10个字节新建为 header10 文件。将要破解的压缩包复制入工具的目录。运行以下命令：\n1 2 3 4 5 6 7  # bkcrack # -C 要破解的压缩包 # -c 内部Store存储的压缩包 # -p 已知至少连续8字节的二进制文件 # -o 该连续字节初始偏移 # -x 其他字节的偏移 其他字节 bkcrack -C 1.zip -c flag.zip -p header10 -o 0 -x 27 000000   如果输出结果为未找到密钥，则按照表中其他可能更换连续二进制文件中的字节，重复运行，直到返回结果。\n处理结果 #  完成破解后， bkcrack 会返回 ZIP 压缩包中用于加密的密钥，将密钥填入以下命令，解密该压缩包中其他的文件：\n1 2  # bkcrack -C 原压缩包 -c 要解密的文件 -k 3个密钥 -d 输出的文件名 bkcrack -C 1.zip -c other.txt -k 90b134ed 50e46dd5 af8c8730 -d other.deflate.txt   因为该文本文件是经过 Deflate 压缩的，所以解密得到的文件还要经过 bkcrack/tool 内的 inflate.py 脚本处理。\n1  python3 inflate.py \u0026lt; other.deflate.txt \u0026gt; other.txt   附录 #  其他格式文件头 #  1 2  RAR: 5261 7221 1a07 00cf 9073 0000 0d00 0000 Rar!.....s...... # \u0026lt; 5.0 PNG: 8950 4e47 0d0a 1a0a 0000 000d 4948 4452 .PNG........IHDR # itself deflated   其他例如 EXE/XML/HTML 等等都可能有足够12字节的固定文件头。\n链接 #    参考资料 \u0026#x21a9;\u0026#xfe0e;\n   "}),a.add({id:5,href:'/posts/raspberry-pi-led-matrix-max7219/',title:"树莓派 LED 点阵 (Max7219) 4x8x8 配置",section:"背景辐射",content:" 总之是记录一下流程，从配置系统开始。\n 配置：    硬件 软件1 2     树莓派3b+ 标准镜像 Raspberry Pi OS with desktop Win 10 写镜像软件 Win32DiskImager   LED 点阵 （Max7219） 4x8x8 Python 库 luma.led_matrix 说明文档 类似项目：比特币显示    配置 Raspbian 系统 #  开启 WIFI 和 SSH #  在完成写入系统镜像到 sd 卡后，在/boot/目录新建一个名为ssh的空文件。\n添加/boot/wpa_supplicant.conf文件，并写入：\n1 2 3 4 5 6 7 8 9 10 11  country=CN ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev update_config=1 # 将 ssid 和 psk 修改为你的 WIFI 名称和密码 network={ ssid=\u0026#34;WiFi-A\u0026#34; psk=\u0026#34;12345678\u0026#34; key_mgmt=WPA-PSK priority=1 }   允许 Root 登录 #  通过ssh raspberrypi -l pi使用默认账号pi和密码raspberry登录，将/etc/ssh/sshd_config中：\n1 2 3  #PermitRootLogin prohibit-password #改为 PermitRootLogin yes   完成修改后，sudo service sshd restart重启服务。使用如下命令修改 root 密码：\n1 2  sudo su passwd root   修改默认软件源 #  例行任务，将国外源改为国内，我比较喜欢网易源，sudo nano /etc/apt/sources.list修改：\n1 2 3  deb http://raspbian.raspberrypi.org/raspbian/ buster main contrib non-free rpi #修改为 deb http://mirrors.163.com/raspbian/raspbian/ buster main contrib non-free rpi   修改 pip 源：\n1 2 3 4 5 6 7 8  mkdir ~/.pip cd ~/.pip nano pip.conf # 写入 [global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple [install] trusted-host=pypi.tuna.tsinghua.edu.cn   驱动 LED 点阵 #  该 LED 点阵由4块8x8的蓝光 LED 和 Max7219驱动芯片组成。\n接线 #  LED 上有5个连接口，分别按照下表连接至树莓派。\n   LED 序号 名称 作用 树莓派 pin 对应卡片 作用     1 VCC 5V电源 2 5V 5V0   2 GND 接地 6 GND GND   3 DIN 数据入口 19 10-MOSI GPIO 10 (MOSI)   4 CS 芯片选择 24 8-CE0 GPIO 8 (SPI CS0)   5 CLK 时钟信号 23 11-SCLK GPIO 11 (SPI CLK)    来自树莓派实验室的引脚对应图\n前置准备 #   来自 https://luma-led-matrix.readthedocs.io/en/latest/install.html\n 开启 spi\n1 2 3  sudo raspi-config # 3 Interfacing Options # 开启 P4 SPI   安装依赖库\n1 2  sudo usermod -a -G spi,gpio pi sudo apt install build-essential python3-dev python3-pip libfreetype6-dev libjpeg-dev libopenjp2-7 libtiff5 -y   升级pip3\n1  sudo -H pip3 install --upgrade --ignore-installed pip setuptools   安装luma.led_matrix库\n1  sudo -H pip3 install --upgrade luma.led_matrix   "}),a.add({id:6,href:'/posts/traps-in-smartdns-on-my-merlin-router/',title:"记录一下我在配置smartdns上遇到的坑",section:"背景辐射",content:" 写在最前面：这个方案出于某些原因暂时弃用，虽然原有的会卡，但是smartdns更卡。此文仅作流程参考。\n  这次将路由器上的dns由dnsmasq替换为smartdns主要是为了使用 dot (dns over TLS)，除此之外，smartdns还提供了多路查询dns的功能。本文主要记录了我在部署到梅林路由器上是遇到的坑。\n开发者教程和文件链接：https://github.com/pymumu/smartdns\n 进入路由器的ssh环境 #  在路由器设置里打开ssh开关，或者和我一样从软件中心里安装shellinabox，使用网页端的ssh。进入shellinabox后输入路由器帐号和密码。\n安装entware (opkg) #   系统管理 \u0026gt; 系统设置\n| Enable SSH | 是 |\n| Enable JFFS custom scripts and configs | 是 | 在ssh环境中：  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  #创建目录 与文件 cd /jffs mkdir /jffs/opt ln -nsf /jffs/opt /tmp/opt #编辑启动脚本 vi /jffs/scripts/post-mount #!/bin/sh ln -nsf /jffs/opt /tmp/opt chmod a+rx /jffs/scripts/post-mount #下载安装脚本 并运行安装 wget http://qnapware.zyxmon.org/binaries-armv7/installer/entware_install_arm.sh sh ./entware_install_arm.sh #好了现在就可以用 命令安装了 opkg update opkg install xxxx   不同于官方在Tool中提供的方法，以上脚本将entware安装在本体的jffs里，不需要额外的u盘挂载。\n安装smartdns #  作者教程 \u0026amp; 软件包下载\n按照路由器架构 (armv7) 和安装环境 (entware/optware) 选择安装包，我用的是smartdns.xxx.arm-optware-all.ipk。\n1 2 3  cd /tmp wget https://github.com/pymumu/smartdns/releases/download/Release33/smartdns.1.2020.09.08-2235.arm-optware-all.ipk opkg install /tmp/smartdns.XXX.ipk   安装过程中，我遇到了路由器证书服务openssl协议太旧的问题，opkg在安装的过程中会根据依赖下载其他软件包，由于服务端协议版本比较高，所以最后我还是手动一个一个下载安装依赖。\n配置smartdns #   默认情况下，smartdns工作在模式1，即通过iptables将53端口发向原有dnsmasq的请求转发到535端口。工作模式可以通过修改/opt/etc/smartdns/smartdns-opt.conf中SMARTDNS_WORKMODE参数来调整。\n 安装完成后nano /opt/etc/smartdns/smartdns.conf，修改以下内容：    修改为 原有 说明     conf-file smartdns-list.conf - 上游dns的地址   bind :535 bind [::]:53 原作者的启动脚本有问题，需要这里手动修改   bind-tcp :535 - 同上   cache-size 40960 cache-size 4096 如果jffs空间不够的话可改小   cache-file /tmp/smartdns.cache - 暂存文件应放在ram里   serve-expired yes - 防止上游dns卡顿   prefetch-domain yes - 自动刷新过期dns   force-AAAA-SOA yes - 有影响，所以先关闭ipv6解析   rr-ttl-min 60 - 从上游dns返回的ttl至少为60s   log-level warn log-level info 这个可以试完了以后改    在/opt/etc/smartdns/smartdns-list.conf添加：\n1 2 3 4 5 6 7  # server 127.0.0.1 -group lan -exclude-default-group server 211.140.13.188 server-tcp 211.140.13.188 server-tls doh.pub # 以下行添加你需要使用原有dnsmasq解析的内网dhcp信息，替换lanX domain-rules /lanX/ -speed-check-mode none -nameserver lan # address /lanX/192.168.XX.XX   去除原启动脚本中会错误修改端口的bug，修改/opt/etc/init.d/S50smartdns：\n1 2 3 4 5  # 将 set_smartdns_port() 的 elif [ \u0026#34;$SMARTDNS_WORKMODE\u0026#34; = \u0026#34;1\u0026#34; ]; then 后注释掉 # sed -i \u0026#34;s/^\\\\(bind .*\\\\):53 *\\\\(.*\\\\)\\$/\\\\1:$SMARTDNS_PORT \\\\2/g\u0026#34; $SMARTDNS_CONF  # sed -i \u0026#34;s/^\\\\(bind-tcp .*\\\\):53 *\\\\(.*\\\\)\\$/\\\\1:$SMARTDNS_PORT \\\\2/g\u0026#34; $SMARTDNS_CONF # 这两行，并添加一行 echo fix bugs   在开机启动脚本/jffs/post-mount添加：\n1  /opt/etc/init.d/rc.unslung start   重启路由器\n测试 #  nslookup -querytype=ptr smartdns或者通过nslookup查询任意一个域名，如果返回ip只有一个，说明部署成功。\n完 #  "}),a.add({id:7,href:'/posts/blog-change-theme-record/',title:"切换博客主题 \u0026 阶段性整理原有主题修改",section:"背景辐射",content:' 简介：这篇文章主要是为了记录我在切换Hugo主题的过程中，所需要做的将部分在旧主题Diary的修改也同步更新到新主题Hugo-book中。原计划里，新主题是Learn，所以在前几次commit里写的新主题名称和这次更新以后commit里不一致。\n此外，这篇文章还包括了新主题比旧主题多拥有的功能，以及我对比其他博客后准备在新主题中额外添加的功能。\n    Process Name Record(Done?)     Switch theme start 2021.01.03   Review old changes Y   More customize ？    Changes comparasion in these two themes #  Old changes I made in Diary theme #     File Name Place (. point to themes/diary/) Usage Need to add? Done?     PreventSteal.js In ./layouts/partial/head.html as \u0026lt;script\u0026gt; Jump back to my site \u0026lt;script src=\u0026quot;{{\u0026quot;/vendor/js/creadcss.min.js\u0026quot; | relURL}}\u0026quot; \u0026gt;\u0026lt;/script\u0026gt; Yes Y   .git/ ./ Delete to prevent submodule problem Yes Y   config.toml \u0026lt;home\u0026gt; add CC BY-NC-SA 4.0 - -   copyright.html ./layouts/partials/  Maybe Y   tagCloud.html In /layouts/partials/extrabar.html Need to rewrite No -   404.html ./layouts/ \u0026lt;a href=\u0026quot;/\u0026quot;\u0026gt;404\u0026lt;/a\u0026gt; - -    TODO List in Book theme #    给网站套了个 CDN（按月免费，字体和图片则由 jsdelivr 代理）\n  标签云，原先以数量显示不够好看，所以换成现在这种。\n  归档页面\n  主字体从Roboto改为PingFang SC 苹方和 Monda\n  支持二维码 qrious\n  Chinese Date Format\nBookDateFormat\n  Find a online CMS article editor for Chinese input-in-browser support (input method in vscode in crostini is broken)\nUsing Chrome Offline App (Minimalist Makrdown Editor)\n  Comments support\nUsing valine and Leancloud, refer to smslit and kokdemo\n  Usable Img uploader PicGo with plugin picgo-plugin-compress by TinyPNG api to host Github\n注意：因为picgo插件市场是基于npm的，所以内置搜索页因为网络不能使用，需要先手动安装npm，再在picgo配置目录下手动npm install picgo-xxx --registry=ht tps://registry.npm.taobao.org/切换国内源安装。\n最后还是挂了代理解决了插件安装的问题，所以我会留一份单独的配置文件以备下次需要使用（~/.config/picgo/）\n手动安装插件还是失败了，最后使用的是github上的imgbot压缩。\n另外，picgo设置内还设定了自定义域名（https://cdn.jsdelivr.net/gh/robust-wq/cdn）来利用其他cdn来加速。   A copy of help pages in Book Demo Site\nContents are Above\n  Add customized main page, remove robot.txt after completion\n   Some changes are inspired by Darren\u0026rsquo;s and TestSmirk and Luzheng\u0026rsquo;s mate blogs built by wordpress.\n  添加修改时间git 更换代码块颜色  1 2 3 4 5 6 7 8  # config.toml [markup.highlight] codeFences = true guessSyntax = false lineNos = true lineNumbersInTable = true noClasses = true style = \u0026#34;tango\u0026#34;    给代码块添加clipboard.js复制功能 文章尾部的： copyright信息 参照1 参照页面 菜单尾部的： bulit by Hugo, powered by \u0026hellip; 参照 Read count: Valine with Leancloud support Word count pure: single.html \u0026amp; wordcount.html 支持脑图的显示(Kityminder)\n在线绘制导出Markdown格式跟能用的不一样，可以使用的是无序列表，但导出的却是标题，所以绘制功能最后还是删了Mind map support 参考文件      Root  Level 1  Level 2 Level 2  Level 3 Level 3  Level 4  Level 5  Level 6           Level 1  Level 2 Level 2   Level 1  Level 2 Level 2   Level 1  Level 2 Level 2   Level 1  Level 2 Level 2          Some are also good, but just write here not going to add\n  按照文件夹（比如documents/书本1/）为分类显示多层次目录，实例网站，替代方案：用markdown表示标签的父子顺序（表格？），模板读取该文件生成关系 Tag cloud 新主题Book在Section下侧边栏会显示每个分类和所包括文章数，所以不再需要了 Add Netlify to auto-generate public/ site\n暂时没必要，现在的方案是\n mermaid.initialize({ "flowchart": { "useMaxWidth":true }, "theme": "neutral" } ) graph LR; A[hugo --minify]--|cd ./public/|B[git push #submodule x.github.io]--|cd ..|C[git psuh #raw hugo file]  \u0026hellip;  New functionality in Book theme #  Mermaid Online Editor\nMeta info for Card-Showing in other share by Open Graph\nButtons\nContribute  Columns\nLeft Content Lorem markdownum insigne\u0026hellip;  Mid Content Lorem markdownum insigne\u0026hellip;  Right Content Lorem markdownum insigne\u0026hellip;   Details\nTitle Markdown content Lorem markdownum insigne\u0026hellip;   Hints\nMarkdown content\n[info|warning|danger]  Katex\n  \\(f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi\\)  Tabs\nMacOS MacOS Content Linux Linux Content Windows Windows Content  '}),a.add({id:8,href:'/posts/self-signed-ca-server-cert/',title:"自签 CA 和服务器证书命令合集",section:"背景辐射",content:"旧的自签CA以及服务器证书生成的命令合集:\nCA.key+CA.crt #  1 2 3 4 5 6 7 8 9 10 11  #服务器端私钥和CA证书生成 openssl req -x509 -newkey rsa:4096 -new -nodes -sha256 -days 36500 \\  -keyout CA.key -out CA.crt \\  -subj \u0026#39;/CN=Used for LAN - ROOT/O=Ab\u0026#39; \\  -config \u0026lt;(cat /etc/ssl/openssl.cnf - \u0026lt;\u0026lt;END [ x509_ext ] basicConstraints = critical,CA:true subjectKeyIdentifier = hash authorityKeyIdentifier = keyid:always,issuer END ) -extensions x509_ext   server.key+server.csr #  1 2 3  openssl req -new -out server.csr -keyout server.key \\  -newkey rsa:4096 -nodes -sha256 \\  -subj \u0026#34;/C=US/ST=/L=/O=Ab/OU=/CN=Debian10\u0026#34;   server.crt #  1 2 3 4 5  openssl x509 -req -days 3650 -CA CA.crt -CAkey CA.key -CAcreateserial \\  -extensions SAN \\  -extfile \u0026lt;(cat /etc/ssl/openssl.cnf \\  \u0026lt;(printf \u0026#34;\\n[SAN]\\nsubjectAltName=DNS:Debian10,IP:192.168.51.24,IP:192.168.51.112,IP:192.168.51.118\u0026#34;)) \\  -in server.csr -out server.crt   server.pfx #  1 2  # Make a package openssl pkcs12 -export -out server.pfx -inkey server.key -in server.crt -certfile CA.crt   Optional: user.key+user.csr\u0026ndash;\u0026gt;user.crt+user.pfx #  1 2 3 4  #客户端生成 生成csr是为了公钥 openssl req -new -keyout user.key -out user.csr -newkey rsa:4096 -sha256 -nodes -subj \u0026#39;/CN=Used for LAN/O=Ab\u0026#39; openssl x509 -req -days 3650 -in user.csr -CA CA.crt -CAkey CA.key -CAcreateserial -out user.crt openssl pkcs12 -export -out user.pfx -inkey user.key -in user.crt -certfile CA.crt   "}),a.add({id:9,href:'/posts/docker-guacamole-rdp/',title:"提升安全性：Nginx 反向代理 RDP 和 IIS 服务",section:"背景辐射",content:' 后续：将提供 webdav 服务的 IIS 替换为 rclone\n Windows 远程桌面服务作为开放给外网的高权限系统组件存在很大的安全隐患，因此如果需要使用 RDP 服务，最好不要直接开放其对应的 3389 端口。通过Remote Desktop Gateway这个默认存在于rdp客户端的认证通道或者是通过代理来避免端口直接暴露。以上两种方式中前者较麻烦，后者则造成每次连接远程桌面都要开启代理，都不太方便。本文介绍如何用Guacamole将rdp内容转换为HTTP，再由Nginx代理给客户端来减少暴露额外的端口带来的安全风险。Nginx监听 443 端口传入的 HTTPS 协议内容，并按路径转发给 Hyper-v VM Docker 中的Guacamole和 Windows 上的 IIS 服务端。Guacamole将宿主机的 RDP 服务转换成 HTML5 内容，不再需要服务端向局域网开放 3389 端口。\n本文基于如下环境和程序\n   Environment Contains      Windows IIS Webserver 10.0 Hyper-v (VM)   Debian10 VM (Hyper-v) Nginx 1.14.2 Docker (Apache Guacamole 1.2.0)    各程序服务按外部访问流程排序\n   Program Usage Env Protocol Address     Nginx HTTPS reverse proxy Debian10 VM HTTPS 192.168.51.118:443 Lan 192.168.208.146 VM   IIS Webserver Other web app (Webdav) Windows HTTP 192.168.208.145:8088/S4f_/ VM   Guacamole HTML5 RDP server Debian10 VM (Docker) HTTP 127.0.0.1:8080/rdp/ VM   RDP Microsoft remote desktop Windows RDP 192.168.208.145:3389 VM    覆盖图  mermaid.initialize({ "flowchart": { "useMaxWidth":true }, "theme": "neutral" } ) graph LR subgraph "Hyper-V" subgraph "VM (Debian10)" c1[Nginx]--|127.0.0.1\n:8080/rdp/|c2[Guacamole\n\u0026 SSH to self] end subgraph "Windows10" a1["IIS Webserver\n(WebDav)"] a2[RDP] end end b1[用户]--|HTTPS\n192.168.51.118|c1 c1--|192.168.208.145\n:8088/S4f_/|a1 c2--|192.168.208.145\n:3389|a2 No Need To Prepare Config File #  More offcial Docs Here\n This Part is for the native build therefore SHOULD BE SKIPPED.1\n As we use docker file here, the default user has been set to guacadmin with password guacadmin.\nOpen Firewall for IIS\' Unusual Port #   In Windows\n After binding port 8088 to IIS server\u0026rsquo;s http service, there are addtional steps for unusual port other than 80 and 443. Open firewall advance settings, add allow rules for 8080. In Scope Remote IP address part, add ip range 192.168.208.0 to 192.168.208.255. In Advance Profiles part, check all three checkboxs and confirm.\nInstall Guacamole by Docker #   In Hyper-v (Debian10)\n Docker Site and uploader\u0026rsquo;s Github\n Add those text to a Dockerfile which is used for changing base url.2  1 2 3 4 5  FROMoznu/guacamole:latestRUN set -x \\ \u0026amp;\u0026amp; rm -rf ${CATALINA_HOME}/webapps/ROOT \\ \u0026amp;\u0026amp; mv ${CATALINA_HOME}/webapps/ROOT.war ${CATALINA_HOME}/webapps/rdp.war  Run command at the place where you put the Dockerfile to bulid a new image.  1  docker build -t guapath .   Run the container (replace /root/guacamole with your config directory which should mkdir first when new build) from your new-built image.  1 2 3 4 5  docker run -d \\  --name=win10rdp \\  -p 127.0.0.1:8080:8080 \\  -v /root/guacamole:/config \\  guapath   Nginx URL Rewrite #   In Hyper-v (Debian10)\n Offcial Document\nMy original plan is to use IIS ARR3.0 module to achive the URL rewrite purpose as this IIS webserver also do the job of sharing my files in Lan via Webdav. But after a query online, I find out that the support of Websocket in IIS which Guacamole needed to communicate seems lack. Therefore I use Nginx to do reverse proxy both for Guacamole in Hyper-V and Webdav that host on IIS.3\nAssign IPs to VM 4 #  To get double IPs in debian VM, first you need to add two network interfaces (here for example eth0 is external for Lan and the eth1 is internal to host) on hyper-v. Then login to the VM and add those lines to /etc/network/interfaces, eth1\u0026rsquo;s static ip is different from the host 192.168.208.145 (like one number after) and mask is same as host\u0026rsquo;s (you can find those in Windows Cmd ipconfig /all). This internal ip is related to firewall settings in Windows so you need to assign one manually to access the host Windows:\n1 2 3 4 5 6 7  auto eth0 iface eth0 inet dhcp auto eth1 iface eth1 inet static ip 192.168.208.146 mask 255.255.255.240   Apply changes by systemctl restart networking. Type ip a in command to find your IPs.\n In Windows\n To add static IP in Windows, open Cmd(Administrator) and input:\n1  netsh interface ip set address name=\u0026#34;vEthernet (Default Switch)\u0026#34; static 192.168.208.145 255.255.255.240 none   Add this command to Manage-\u0026gt;Scheduled Tasks-\u0026gt;Create a Basic Task and set it run as administrator to get static ip rather than random one that Windows assign to on startup. Disable only start task when plug in power and add a delay for 30s after startup.\nBy default, Hyper-v will give VM a random Mac which would make your router assign new ip for your VM\u0026rsquo;s external network on boot. Open VM\u0026rsquo;s settings, expand your external Network Adapter and click on Advanced Features. In Mac Address select static and input a Mac address.\nInstall Nginx with Webdav module #   In Hyper-v (Debian10)\n 1  sudo apt-get install nginx-full -y   Remove Default Page\n1  rm /etc/nginx/sites-enabled/default   Add Proxy Config #  Add those lines to your /etc/nginx/nginx.conf file inside the server section. Replace rdp with your guacamole\u0026rsquo;s url path.\n1 2 3 4 5 6 7 8 9 10  location /rdp/ { proxy_redirect off; proxy_buffering off; proxy_http_version 1.1; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection $http_connection; access_log off; proxy_pass http://127.0.0.1:8080/rdp/; }   Replace S4f_ with your IIS Webdav url path, and 192.168.208.145 with your Windows\u0026rsquo;s internal ip. I also changed the query string from client to IIS to fix problems (it\u0026rsquo;s an Nginx bug when reverse proxy a webdav request, especially when use MOVE method, the Destination header would be set as nginx\u0026rsquo;s address rather than IIS\' 5) by if set.\nadd in http\n1 2 3 4  map $http_destination $destination { ~*(https?:\\/\\/)([a-z0-9\\.]+\\/)(.+)$ http://192.168.208.145:8088/$3; default $http_destination; }   add in server\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  location /S4f_/ { # allow webdav to max upload 4G  client_max_body_size 4096m; proxy_redirect off; proxy_buffering off; proxy_http_version 1.1; proxy_set_header Destination $destination; # don\u0026#39;t set this header as webdav destination check needed  # proxy_set_header Host $http_host;  proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header http_x_forwarded_for $remote_addr; proxy_set_header remote_addr $remote_addr; access_log off; proxy_pass http://192.168.208.145:8088/S4f_/; }   Config HTTPS and Auth #  About how to generate self-signed certificate, you can refer to Here.\nCopy your server.crt and server.key to nginx/ folder (use scp /path/to/file username@ip.ip.ip.ip:/path/to/destination or Winscp).\nYou can add extra auth for anyone who visit the site by nginx\u0026rsquo;s basic auth6.\nReplace server config with following lines.\n1 2 3 4 5 6 7 8 9 10 11  server { listen 443 ssl http2; server_name localhost; server_tokens off; ssl_certificate server.crt; ssl_certificate_key server.key; ssl_protocols TLSv1.2 TLSv1.3; ssl_prefer_server_ciphers on; ssl_ciphers HIGH:!aNULL:!MD5; add_header Strict-Transport-Security \u0026#34;max-age=31536000; includeSubDomains\u0026#34; always; }   And to disable default nginx index page, add in server:\n1 2 3  location / { return 404; }    As a summary, your nginx.conf file should look like this:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  # Default settings and others http { # Default but remember to delete SSL-related settings  # Because it\u0026#39;s included in server  map $http_destination $destination { # ..  } server { # ...  location / { return 404; } location /rdp/ { # ...  } location /S4f_/ { # ...  } } }   When done, restart your Nginx service:\n1  sudo systemctl restart nginx   Manage Nginx and Guacamole to Autostart #  For Nginx:\n1 2 3 4  # nginx autostart (enable)/ disable (disable) sudo systemctl enable nginx # nginx start/stop/status sudo systemctl start nginx   To check port use lsof -i -P.The Nginx log is in /var/log/nginx/ as access.log and error.log for debug.\n For Guacamole, in /etc/systemd/system/docker-win10rdp.service add:\n1 2 3 4 5 6 7 8 9 10 11 12  [Unit] Description=Docker for win10rdp Requires=docker.service After=docker.service [Service] Restart=always ExecStart=/usr/bin/docker start -a win10rdp ExecStop=/usr/bin/docker stop -t 2 win10rdp [Install] WantedBy=default.target   Enable the service:\n1  sudo systemctl enable docker-win10rdp.service   Edit Guacamole Settings #   In Browser\n Add Account #  Access Guacamole\u0026rsquo;s web page using your VM\u0026rsquo;s external ip address https://192.168.51.118/rdp with guacadmin for both username and password.\nAfter a successfully login, open settings and click on the Users. Create your own account with all permissions checked. Sign in your own account and delete the default guacadmin one.\nAdd Connections #  Click on the New Connection inside the Connections. Fill the Name, Protocol, Hostname (Hyper-v internal ip), Port, Username, Password, Security Mode and check the Ignore server certificate. Save the changes.\n In Hyper-v (Debian10)\n If you want to enhance VM server\u0026rsquo;s security, you can add a ssh connection from docker to host. Use ip a to check docker0 host\u0026rsquo;s ip. Also, change the settings in /etc/ssh/sshd_config by change port and listenAddress. Apply changes sudo systemctl restart sshd:\n1 2 3  Port 25678 # same as docker0 in ip a ListenAddress 172.18.0.1   Also add these command after sudo systemctl edit sshd to allow sshd start when docker0\u0026rsquo;s ready:\n1 2 3 4  [Service] Restart=on-failure RestartSec=3 RestartPreventExitStatus=   Test on Connection #   In Browser\n Back to Home, click on the connection you just added. Check if everything is fine.\nMore Security Stuff #  Expose 3389 to Hyper-v only #   In Windows\n Open firewall advance settings, add two allow rules for TCP and UDP port3389. In Scope Remote IP address part, add ip range 192.168.208.0 to 192.168.208.255. In Advance Profiles part, check all three checkboxs and confirm. Disable old TCP and UDP port 3389 allow rules.\nFail x00/x03 to Ban #   In Hyper-v (Debian10)\n Install fail2ban\n1  sudo apt-get install fail2ban   Edit your config file from template\n1 2  sudo cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local sudo nano /etc/fail2ban/jail.local   Add your client ip to ignoreip\n1 2 3  [DEFAULT] # ... ignoreip = 127.0.0.1/8 ::1 your-ip-address-here   Modify default bantime, findtime and maxretry\n1 2 3 4 5 6 7 8 9  # \u0026#34;bantime\u0026#34; is the number of seconds that a host is banned. bantime = 48h # -1 means permanant # A host is banned if it has generated \u0026#34;maxretry\u0026#34; during the last \u0026#34;findtime\u0026#34;  # seconds. findtime = 10m # \u0026#34;maxretry\u0026#34; is the number of failures before a host get banned. maxretry = 10   Create your special jail in jail.local\n1 2 3 4 5  [nginx-x0x] enabled = true port = http,https filter = nginx-x0x logpath = /var/log/nginx/access.log   Create filter for Nginx x0x (like 403) error\n1  sudo nano /etc/fail2ban/filter.d/nginx-x0x.conf   Add\n1 2 3  [Definition] failregex = ^\u0026lt;HOST\u0026gt;.*\u0026#34;(GET|POST|HEAD).*\u0026#34; (404|444|403|400) .*$ ignoreregex =   You can test your regex here\n1  fail2ban-regex /var/log/nginx/access.log /etc/fail2ban/filter.d/nginx-x0x.conf   Restart fail2ban\n1  sudo systemctl restart fail2ban   To see status\n1  sudo fail2ban-client status nginx-x0x   To rescue from jail\n1  sudo fail2ban-client set nginx-x0x unbanip \u0026lt;ip\u0026gt;   APPENDIX #     Deprecated\nChanging the config of Guacamole is now in its GUI control panel instead of in its config file.\n First, prepare the config file that will be used by guacamole.\nReplace 192.168.208.145 with your Windows IP address or Hostname (not recommend) connected to the Hyper-v (as 192.168.208.146 is the VM\u0026rsquo;s IP that Hyper-v assigned to). Also don\u0026rsquo;t forget to change the username and password (md5).\nIn Debian, you can use md5sum \u0026lt;File contains PASSWORD\u0026gt; to hash your plain password.\n/root/guacamole/user-mapping.xml ```xml  vnc localhost 5900 VNCPASS  --\n \u0026lt;!-- Another user, but using md5 to hash the password (example below uses the md5 hash of \u0026quot;PASSWORD\u0026quot;) --\u0026gt; \u0026lt;authorize username=\u0026quot;admin\u0026quot; password=\u0026quot;**PASSWORD CONVERT TO MD5**\u0026quot; encoding=\u0026quot;md5\u0026quot;\u0026gt; \u0026lt;connection name=\u0026quot;Unique Name\u0026quot;\u0026gt; \u0026lt;protocol\u0026gt;rdp\u0026lt;/protocol\u0026gt; \u0026lt;param name=\u0026quot;hostname\u0026quot;\u0026gt;192.168.208.145\u0026lt;/param\u0026gt; \u0026lt;param name=\u0026quot;port\u0026quot;\u0026gt;3389\u0026lt;/param\u0026gt; \u0026lt;/connection\u0026gt; \u0026lt;/authorize\u0026gt; \u0026lt;/user-mapping\u0026gt; ```  \u0026#x21a9;\u0026#xfe0e;  Failed\nFailed on COPY root /.\n (This file is originated from oznu/guacamole, however the path in curl -SLo ${CATALINA_HOME}/webapps/ROOT.war has been changed to ${CATALINA_HOME}/webapps/rdp.war which is same to https://.../rdp). ```dockerfile FROM library/tomcat:9-jre11\nENV ARCH=amd64 \\ GUAC_VER=1.2.0 \\ GUACAMOLE_HOME=/app/guacamole \\ PG_MAJOR=9.6 \\ PGDATA=/config/postgres \\ POSTGRES_USER=guacamole \\ POSTGRES_DB=guacamole_db # Apply the s6-overlay RUN curl -SLO \u0026quot;https://github.com/just-containers/s6-overlay/releases/download/v1.20.0.0/s6-overlay-${ARCH}.tar.gz\u0026quot; \\ \u0026amp;\u0026amp; tar -xzf s6-overlay-${ARCH}.tar.gz -C / \\ \u0026amp;\u0026amp; tar -xzf s6-overlay-${ARCH}.tar.gz -C /usr ./bin \\ \u0026amp;\u0026amp; rm -rf s6-overlay-${ARCH}.tar.gz \\ \u0026amp;\u0026amp; mkdir -p ${GUACAMOLE_HOME} \\ ${GUACAMOLE_HOME}/lib \\ ${GUACAMOLE_HOME}/extensions WORKDIR ${GUACAMOLE_HOME} # Install dependencies RUN apt-get update \u0026amp;\u0026amp; apt-get install -y \\ libcairo2-dev libjpeg62-turbo-dev libpng-dev \\ libossp-uuid-dev libavcodec-dev libavutil-dev \\ libswscale-dev freerdp2-dev libfreerdp-client2-2 libpango1.0-dev \\ libssh2-1-dev libtelnet-dev libvncserver-dev \\ libpulse-dev libssl-dev libvorbis-dev libwebp-dev libwebsockets-dev \\ ghostscript postgresql-${PG_MAJOR} \\ \u0026amp;\u0026amp; rm -rf /var/lib/apt/lists/* # Link FreeRDP to where guac expects it to be RUN [ \u0026quot;$ARCH\u0026quot; = \u0026quot;armhf\u0026quot; ] \u0026amp;\u0026amp; ln -s /usr/local/lib/freerdp /usr/lib/arm-linux-gnueabihf/freerdp || exit 0 RUN [ \u0026quot;$ARCH\u0026quot; = \u0026quot;amd64\u0026quot; ] \u0026amp;\u0026amp; ln -s /usr/local/lib/freerdp /usr/lib/x86_64-linux-gnu/freerdp || exit 0 # Install guacamole-server RUN curl -SLO \u0026quot;http://apache.org/dyn/closer.cgi?action=download\u0026amp;filename=guacamole/${GUAC_VER}/source/guacamole-server-${GUAC_VER}.tar.gz\u0026quot; \\ \u0026amp;\u0026amp; tar -xzf guacamole-server-${GUAC_VER}.tar.gz \\ \u0026amp;\u0026amp; cd guacamole-server-${GUAC_VER} \\ \u0026amp;\u0026amp; ./configure \\ \u0026amp;\u0026amp; make -j$(getconf _NPROCESSORS_ONLN) \\ \u0026amp;\u0026amp; make install \\ \u0026amp;\u0026amp; cd .. \\ \u0026amp;\u0026amp; rm -rf guacamole-server-${GUAC_VER}.tar.gz guacamole-server-${GUAC_VER} \\ \u0026amp;\u0026amp; ldconfig # Install guacamole-client and postgres auth adapter RUN set -x \\ \u0026amp;\u0026amp; rm -rf ${CATALINA_HOME}/webapps/ROOT \\ \u0026amp;\u0026amp; curl -SLo ${CATALINA_HOME}/webapps/rdp.war \u0026quot;http://apache.org/dyn/closer.cgi?action=download\u0026amp;filename=guacamole/${GUAC_VER}/binary/guacamole-${GUAC_VER}.war\u0026quot; \\ \u0026amp;\u0026amp; curl -SLo ${GUACAMOLE_HOME}/lib/postgresql-42.1.4.jar \u0026quot;https://jdbc.postgresql.org/download/postgresql-42.1.4.jar\u0026quot; \\ \u0026amp;\u0026amp; curl -SLO \u0026quot;http://apache.org/dyn/closer.cgi?action=download\u0026amp;filename=guacamole/${GUAC_VER}/binary/guacamole-auth-jdbc-${GUAC_VER}.tar.gz\u0026quot; \\ \u0026amp;\u0026amp; tar -xzf guacamole-auth-jdbc-${GUAC_VER}.tar.gz \\ \u0026amp;\u0026amp; cp -R guacamole-auth-jdbc-${GUAC_VER}/postgresql/guacamole-auth-jdbc-postgresql-${GUAC_VER}.jar ${GUACAMOLE_HOME}/extensions/ \\ \u0026amp;\u0026amp; cp -R guacamole-auth-jdbc-${GUAC_VER}/postgresql/schema ${GUACAMOLE_HOME}/ \\ \u0026amp;\u0026amp; rm -rf guacamole-auth-jdbc-${GUAC_VER} guacamole-auth-jdbc-${GUAC_VER}.tar.gz # Add optional extensions RUN set -xe \\ \u0026amp;\u0026amp; mkdir ${GUACAMOLE_HOME}/extensions-available \\ \u0026amp;\u0026amp; for i in auth-ldap auth-duo auth-header auth-cas auth-openid auth-quickconnect auth-totp; do \\ echo \u0026quot;http://apache.org/dyn/closer.cgi?action=download\u0026amp;filename=guacamole/${GUAC_VER}/binary/guacamole-${i}-${GUAC_VER}.tar.gz\u0026quot; \\ \u0026amp;\u0026amp; curl -SLO \u0026quot;http://apache.org/dyn/closer.cgi?action=download\u0026amp;filename=guacamole/${GUAC_VER}/binary/guacamole-${i}-${GUAC_VER}.tar.gz\u0026quot; \\ \u0026amp;\u0026amp; tar -xzf guacamole-${i}-${GUAC_VER}.tar.gz \\ \u0026amp;\u0026amp; cp guacamole-${i}-${GUAC_VER}/guacamole-${i}-${GUAC_VER}.jar ${GUACAMOLE_HOME}/extensions-available/ \\ \u0026amp;\u0026amp; rm -rf guacamole-${i}-${GUAC_VER} guacamole-${i}-${GUAC_VER}.tar.gz \\ ;done ENV PATH=/usr/lib/postgresql/${PG_MAJOR}/bin:$PATH ENV GUACAMOLE_HOME=/config/guacamole WORKDIR /config COPY root / EXPOSE 8080 ENTRYPOINT [ \u0026quot;/init\u0026quot; ] ```  \u0026#x21a9;\u0026#xfe0e;  Deprecated\nUse nginx reverse proxy instead because ARR\u0026rsquo;s lack of Websocket support.\n Install Application Request Routing (ARR) Module\nInstall ARR 3.0 for Reverse Proxy support. You can install the ARR module directly from the location: http://www.microsoft.com/web/gallery/install.aspx?appid=ARRv3_0.\nChange URL Rewrite Settings\nOpen the IIS Manager and open the Default Web Site config pannel. Then double click on the URL Rewrite option.\nAdd 2 rules for Inbound rules and another one for Outbound Rules by clicking on the Add Rule(s)... action and Choose the Blank Rule template. Contents that needed to be changed are in the following tables:\nInbound Rules\nThe first line of the table prevent address /S4f_/ (another web app that hosted on the IIS server) to be rewritten to the rdp sevice. Also need to check the Append query string checkbox.\n|Name|Input|Match|Pattern|Action Type|Action URL|Stop Processing| |-|-|-|-|-|-|-| |S4f| - |match|S4f_(/?)(.*)|Rewrite|{R:0}|True| |rdp| - |match|rdp(/?)(.*)|Rewrite|http://172.17.111.38:8080/{R:0}|True|  \u0026#x21a9;\u0026#xfe0e;  Deprecated\nThe hostname that Hyper-v provided is not stable. It\u0026rsquo;s better set static ip both manually.\n The old host-accessed-by-hostname (HOSTNAME.mshome.net) plan isn\u0026rsquo;t unstable enough than assigning static ip to both host 192.168.208.145 and VM 192.168.208.146. \u0026#x21a9;\u0026#xfe0e;\n  Important\nThere is a bug when Nginx handle reverse proxy to a webdav server. Related discussion and webdav path requirement.\n In Nginx\u0026rsquo;s reverse proxy part S4f_, I add extra filter to change query uri for webdav service. I\u0026rsquo;m using rclone as my Webdav client, however, it contains bugs while sending requests to a proxyed server. For example, rclone sends webdav method MOVE and query uri https://\u0026lt;nginx\u0026gt;/S4f_/path/to/file to the server to rename a file while the correct query uri without proxy is http://\u0026lt;IIS\u0026gt;/S4f_/path/to/file. Therefore, to fix the problem, I add extra if-statement and regex set to convert path that contains scheme and server name to relative path.\nEdit1: It seems that it\u0026rsquo;s a common problem when use Nginx as reverse proxy and not just the bug of rclone. More information about this is in description above. The Webdav server will check the Destination header in query uri if it match the internal server.\nEdit2: Because of RFC2518, Destination header should be absolute URI. Convert it to relative is not the solution. The better way is to rewrite the scheme and path to match the internal communication when proxy to IIS backend.\nEdit3: if-state in Nginx will double escape() the query string (like convert already converted string %6E to %256E). So I use map (should be placed in http section) instead. For some reason, IIS Webdav server behind proxy will check if MOVE method\u0026rsquo;s query string Destination is match the proxyed Host. To avoid error, delete or comment the proxy_set_header host $http_host in location /S4f_/ {..}. \u0026#x21a9;\u0026#xfe0e;\n  Optional\nSet basic auth for Nginx.\n Generate your conf/userpass.txt file by command htpasswd or online MD5 htpasswd generator. Text inside are like share:$apr1$AOW5qtOx$7D3rsVK/jIQuQYqd11/Xg0. Add those lines in your nginx.conf server section. nginx auth_basic \u0026quot;Auth\u0026quot;; auth_basic_user_file userpass.txt;  \u0026#x21a9;\u0026#xfe0e;\n   '}),a.add({id:10,href:'/posts/documents/github-ssh-git-push/',title:"如何实现 Github 免密码 git push 内容",section:"异构",content:" Contents from Github Help.\n Git Cnfig as a backup #   This part is a backup of the git config of my hugo blog.\n ./XXX/\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  [core] repositoryformatversion = 0 filemode = false bare = false logallrefupdates = true symlinks = false [submodule \u0026#34;public\u0026#34;] url = git@github.com:wmillers/wmillers.github.io.git active = true [remote \u0026#34;origin\u0026#34;] url = git@github.com:wmillers/XXX.git [branch \u0026#34;master\u0026#34;] remote = origin merge = refs/heads/master   ./XXX/public/\n1 2 3 4 5 6 7 8 9 10 11 12  [core] repositoryformatversion = 0 filemode = false bare = false logallrefupdates = true symlinks = false [remote \u0026#34;origin\u0026#34;] url = git@github.com:wmillers/wmillers.github.io.git fetch = +refs/heads/*:refs/remotes/origin/* [branch \u0026#34;master\u0026#34;] remote = origin merge = refs/heads/master   Generating a new SSH key #   Open Git Bash. Paste the text below, substituting in your GitHub email address.  1  $ ssh-keygen -t rsa -b 4096 -C \u0026#34;your_email@example.com\u0026#34;   This creates a new ssh key, using the provided email as a label.\n1  \u0026gt; Generating public/private rsa key pair.   When you\u0026rsquo;re prompted to \u0026ldquo;Enter a file in which to save the key,\u0026rdquo; press Enter. This accepts the default file location.  1  \u0026gt; Enter a file in which to save the key (/c/Users/you/.ssh/id_rsa):[Press enter]   At the prompt, type a secure passphrase. For more information, see \u0026ldquo;Working with SSH key passphrases\u0026rdquo;.\n1 2  \u0026gt; Enter passphrase (empty for no passphrase): [Type a passphrase] \u0026gt; Enter same passphrase again: [Type passphrase again]   Adding your SSH key to the ssh-agent #  Before adding a new SSH key to the ssh-agent to manage your keys, you should have checked for existing SSH keys and generated a new SSH key.\nIf you have GitHub Desktop installed, you can use it to clone repositories and not deal with SSH keys. It also comes with the Git Bash tool, which is the preferred way of running git commands on Windows.\n Ensure the ssh-agent is running:   If you are using the Git Shell that\u0026rsquo;s installed with GitHub Desktop, the ssh-agent should be running. If you are using another terminal prompt, such as Git for Windows, you can use the \u0026ldquo;Auto-launching the ssh-agent\u0026rdquo; instructions in \u0026ldquo;Working with SSH key passphrases\u0026rdquo;, or start it manually:  1 2 3  ## start the ssh-agent in the background $ eval $(ssh-agent -s) \u0026gt; Agent pid 59566   Add your SSH private key to the ssh-agent. If you created your key with a different name, or if you are adding an existing key that has a different name, replace id_rsa in the command with the name of your private key file.  1  $ ssh-add ~/.ssh/id_rsa   Add the SSH key to your GitHub account #   Copy the SSH key to your clipboard.  If your SSH key file has a different name than the example code, modify the filename to match your current setup. When copying your key, don\u0026rsquo;t add any newlines or whitespace.\n1 2  $ clip \u0026lt; ~/.ssh/id_rsa.pub ## Copies the contents of the id_rsa.pub file to your clipboard    Tip: If clip isn\u0026rsquo;t working, you can locate the hidden .ssh folder, open the file in your favorite text editor, and copy it to your clipboard.\n  In the upper-right corner of any page, click your profile photo, then click Settings.\n  In the user settings sidebar, click SSH and GPG keys.\n  Click New SSH key or Add SSH key.\n  In the \u0026ldquo;Title\u0026rdquo; field, add a descriptive label for the new key. For example, if you\u0026rsquo;re using a personal Mac, you might call this key \u0026ldquo;Personal MacBook Air\u0026rdquo;.\n  Paste your key into the \u0026ldquo;Key\u0026rdquo; field.\n  Click Add SSH key.\n  If prompted, confirm your GitHub password.\n  "}),a.add({id:11,href:'/posts/documents/markdown-cheatsheet/',title:"Markdown 语法速成",section:"异构",content:" This document is originated from markdownguide, converted from html to markdown by aspose, and fix format by myself.\n Get Started\nCheat Sheet\nBasic Syntax\nExtended Syntax\nTools\nBook\nMarkdown Cheat Sheet #  A quick reference to the Markdown syntax.\nOverview #  This Markdown cheat sheet provides a quick overview of all the Markdown syntax elements. It can’t cover every edge case, so if you need more information about any of these elements, refer to our reference guides for basic syntax and extended syntax.\nBasic Syntax #  These are the elements outlined in John Gruber’s original design document. All Markdown applications support these elements.\n   Element Markdown Syntax Render     Heading # H1     ## H2     ### H3    Bold **bold text** bold text   Italic *italicized text* italicized text   Blockquote \u0026gt; blockquote    Ordered List 1. First item     1. Second item     1. Third item    Unordered List - First item     - Second item     - Third item    Code ` code ` code   Horizontal Rule --- \u0026mdash;   Link [title](https://www.example.com) title   Image ![alt text](image.jpg)     Extended Syntax #  These elements extend the basic syntax by adding additional features. Not all Markdown applications support these elements.\n   Element Markdown Syntax     Table | Syntax | Description |    | \u0026mdash;\u0026mdash;\u0026mdash;\u0026ndash; | \u0026mdash;\u0026mdash;\u0026mdash;\u0026ndash; |    | Header | Title |    | Paragraph | Text \\   Fenced Code Block ` ` `    {     \u0026ldquo;firstName\u0026rdquo;: \u0026ldquo;John\u0026rdquo;,     \u0026ldquo;lastName\u0026rdquo;: \u0026ldquo;Smith\u0026rdquo;,     \u0026ldquo;age\u0026rdquo;: 25    }    ` ` `   Footnote Here\u0026rsquo;s a sentence with a footnote. [^1]    [^1]: This is the footnote.   Heading ID ### My Great Heading {#custom-id}   Definition List term    : definition   Strikethrough 	~~The world is flat.~~   Task List - [x] Write the press release    - [ ] Update the website    - [ ] Contact the media    "}),a.add({id:12,href:'/posts/documents/front-matter-of-hugo/',title:"Hugo 文章前置标签语法",section:"异构",content:" An copy of Hugo Front Matter Document\n Hugo supports four formats for front matter, each with their own identifying tokens.\nTOML\nidentified by opening and closing +++.\nYAML\nidentified by opening and closing \u0026mdash;.\nJSON\na single JSON object surrounded by ‘{’ and ‘}’, followed by a new line.\nORG\na group of Org mode keywords in the format ‘#+KEY: VALUE’. Any line that does not start with #+ ends the front matter section. Keyword values can be either strings (#+KEY: VALUE) or a whitespace separated list of strings (#+KEY[]: VALUE_1 VALUE_2).\nIn Hugo I just use YAML as my markdown files' front matter\n1 2 3 4 5 6 7 8 9 10 11 12 13  categories:- Development- VIMdate:\u0026#34;2012-04-06\u0026#34;description:spf13-vim is a cross platform distribution of vim plugins and resourcesfor Vim.slug:spf13-vim-3-0-release-and-new-websitetags:- .vimrc- plugins- spf13-vim- vimtitle:spf13-vim 3.0 release and new website  Front Matter Variables Link #  Predefined #  There are a few predefined variables that Hugo is aware of. See Page Variables for how to call many of these predefined variables in your templates.\naliases #  an array of one or more aliases (e.g., old published paths of renamed content) that will be created in the output directory structure . See Aliases for details.\naudio #  an array of paths to audio files related to the page; used by the opengraph internal template to populate og:audio.\ncascade #  a map of Front Matter keys whose values are passed down to the page’s descendents unless overwritten by self or a closer ancestor’s cascade. See Front Matter Cascade for details.\ndate #  the datetime assigned to this page. This is usually fetched from the date field in front matter, but this behaviour is configurable.\ndescription #  the description for the content.\ndraft #  if true, the content will not be rendered unless the --buildDrafts flag is passed to the hugo command.\nexpiryDate #  the datetime at which the content should no longer be published by Hugo; expired content will not be rendered unless the --buildExpired flag is passed to the hugo command.\nheadless #  if true, sets a leaf bundle to be headless.\nimages #  an array of paths to images related to the page; used by internal templates such as _internal/twitter_cards.html.\nisCJKLanguage #  if true, Hugo will explicitly treat the content as a CJK language; both .Summary and .WordCount work properly in CJK languages.\nkeywords #  the meta keywords for the content.\nlayout #  the layout Hugo should select from the lookup order when rendering the content. If a type is not specified in the front matter, Hugo will look for the layout of the same name in the layout directory that corresponds with a content’s section. See “Defining a Content Type”\nlastmod #  the datetime at which the content was last modified.\nlinkTitle #  used for creating links to content; if set, Hugo defaults to using the linktitle before the title. Hugo can also order lists of content by linktitle.\nmarkup #  experimental; specify \u0026quot;rst\u0026quot; for reStructuredText (requires rst2html) or \u0026quot;md\u0026quot; (default) for Markdown.\noutputs #  allows you to specify output formats specific to the content. See output formats.\npublishDate #  if in the future, content will not be rendered unless the --buildFuture flag is passed to hugo.\nresources #  used for configuring page bundle resources. See Page Resources.\nseries #  an array of series this page belongs to, as a subset of the series taxonomy; used by the opengraph internal template to populate og:see_also.\nslug #  appears as the tail of the output URL. A value specified in front matter will override the segment of the URL based on the filename.\nsummary #  text used when providing a summary of the article in the .Summary page variable; details available in the content-summaries section.\ntitle #  the title for the content.\ntype #  the type of the content; this value will be automatically derived from the directory (i.e., the section) if not specified in front matter.\nurl #  the full path to the content from the web root. It makes no assumptions about the path of the content file. It also ignores any language prefixes of the multilingual feature.\nvideos #  an array of paths to videos related to the page; used by the opengraph internal template to populate og:video.\nweight #  used for ordering your content in lists. Lower weight gets higher precedence. So content with lower weight will come first. If set, weights should be non-zero, as 0 is interpreted as an unset weight.\n\u0026lt;taxonomies\u0026gt; #  field name of the plural form of the index. See tags and categories in the above front matter examples. Note that the plural form of user-defined taxonomies cannot be the same as any of the predefined front matter variables.\n If neither slug nor url is present and permalinks are not configured otherwise in your site config file, Hugo will use the filename of your content to create the output URL. See Content Organization for an explanation of paths in Hugo and URL Management for ways to customize Hugo’s default behaviors.\n User-Defined #  You can add fields to your front matter arbitrarily to meet your needs. These user-defined key-values are placed into a single .Params variable for use in your templates.\nThe following fields can be accessed via .Params.include_toc and .Params.show_comments, respectively. The Variables section provides more information on using Hugo’s page- and site-level variables in your templates.\n1 2  include_toc:trueshow_comments:false  Front Matter Cascade #  Any node or section can pass down to descendents a set of Front Matter values as long as defined underneath the reserved cascade Front Matter key.\nExample In content/blog/_index.md\n1 2 3  cascade:banner:images/typewriter.jpgtitle:Blog  With the above example the Blog section page and its descendents will return images/typewriter.jpg when .Params.banner is invoked unless:\n Said descendent has its own banner value set Or a closer ancestor node has its own cascade.banner value set.  Click here to continue read on original page\nOrder Content Through Front Matter\nOverride Global Markdown Configuration\nFront Matter Format Specs\nSee Also\n Archetypes Data Templates Code Toggle Configure Hugo Taxonomies  "}),a.add({id:13,href:'/posts/my-first-post/',title:"通用 Markdown \u0026 Shortcode 测试页面",section:"背景辐射",content:' Used for test\nMay contains bugs\nabout\n 1️⃣\nEmoji Cheetsheet\nWhen $a \\ne 0$, there are two solutions to (ax^2 + bx + c = 0) and they are $$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}.$$\nInternal params (like .Summary) WILL CAUSE SUMMARY ERROR #  1  A bunch of code here    render of `code` bug: ` code `\n1  render of **\\`code\\`** bug: \\` code \\`    Note that table should inside empty lines\n  \u0026lt;Empty\u0026gt;\n   1 2     fail -   \u0026lt;Empty\u0026gt;         1 2     fail -    Usage #   tags  git github ssh markdown cheetsheet tutorial   categories  test archive undone finished   section basic type of an post, shows usage of a post, like:  document collect of documents posts default section    ** Memain Online Editor**\nTo change color: \u0026lsquo;default\u0026rsquo;, \u0026lsquo;forest\u0026rsquo;, \u0026lsquo;dark\u0026rsquo;, \u0026lsquo;neutral\u0026rsquo;\n mermaid.initialize({ "flowchart": { "useMaxWidth":true }, "theme": "neutral" } ) graph LR; A[Hard edge] --|Link text| B(Round edge) B -- C{Decision} C --|One| D[Result one] C --|Two| E[Result two] 1 2 3 4 5 6 7  graph LR; A[Hard edge] --\u0026gt;|Link text| B(Round edge) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result one] C --\u0026gt;|Two| E[Result two] This document is originated from markdownguide, converted from html to markdown by aspose, and fix format by myself. Get Started Cheat Sheet Basic Syntax Extended Syntax Tools Book Markdown Cheat 2020-07-01   '})})()